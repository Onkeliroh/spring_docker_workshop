version: "3"

services:
  demo:
    labels:
      traefik.domain: localhost
      traefik.docker.network: demonetwork
      traefik.protocol: http
      traefik.port: 8080
      traefik.frontend.entryPoints: http
      traefik.backend.healthcheck.path: /actuator/health
      traefik.backend.healthcheck.port: 8080
      traefik.backend.healthcheck.interval: 1s
    build:
      context: .
    image: demo:latest
    container_name: demo
    ports:
      - "8080:8080"
    environment:
      DEMO_GREETING_TARGET_HOST: echo
      DEMO_GREETING_TARGET_PORT: 3000
      SPRING_BOOT_ADMIN_CLIENT_URL: "http://admin:8123"
    networks:
      - demonetwork

  echo:
    labels:
      traefik.enable: false
    image: kennship/http-echo:latest
    container_name: echo
    ports:
      - "8081:3000"
    networks:
      - demonetwork

  admin:
    labels: 
      traefik.domain: localhost
      traefik.protocol: http
      traefik.port: 8123
      traefik.docker.network: demonetwork
      traefik.frontend.entryPoints: http
    image: onkeliroh/spring-boot-admin-server:2.0.0
    container_name: spring_boot_admin
    ports:
      - "8123:8123"
    networks: 
      - demonetwork

  # $Env:COMPOSE_CONVERT_WINDOWS_PATHS=1
  reverse-proxy:
    image: traefik:1.6.3
    command: --api --docker # Enables the web UI and tells Tr√¶fik to listen to docker
    ports:
      - "80:80"     # The HTTP port
      - "8082:8080" # The Web UI (enabled by --api)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock #So that Traefik can listen to the Docker event
    networks:
      - demonetwork

networks:
  demonetwork:
